aVec = 5:-0.1:-5

aVec =

  Columns 1 through 9

    5.0000    4.9000    4.8000    4.7000    4.6000    4.5000    4.4000    4.3000    4.2000

  Columns 10 through 18

    4.1000    4.0000    3.9000    3.8000    3.7000    3.6000    3.5000    3.4000    3.3000

  Columns 19 through 27

    3.2000    3.1000    3.0000    2.9000    2.8000    2.7000    2.6000    2.5000    2.4000

  Columns 28 through 36

    2.3000    2.2000    2.1000    2.0000    1.9000    1.8000    1.7000    1.6000    1.5000

  Columns 37 through 45

    1.4000    1.3000    1.2000    1.1000    1.0000    0.9000    0.8000    0.7000    0.6000

  Columns 46 through 54

    0.5000    0.4000    0.3000    0.2000    0.1000         0   -0.1000   -0.2000   -0.3000

  Columns 55 through 63

   -0.4000   -0.5000   -0.6000   -0.7000   -0.8000   -0.9000   -1.0000   -1.1000   -1.2000

  Columns 64 through 72

   -1.3000   -1.4000   -1.5000   -1.6000   -1.7000   -1.8000   -1.9000   -2.0000   -2.1000

  Columns 73 through 81

   -2.2000   -2.3000   -2.4000   -2.5000   -2.6000   -2.7000   -2.8000   -2.9000   -3.0000

  Columns 82 through 90

   -3.1000   -3.2000   -3.3000   -3.4000   -3.5000   -3.6000   -3.7000   -3.8000   -3.9000

  Columns 91 through 99

   -4.0000   -4.1000   -4.2000   -4.3000   -4.4000   -4.5000   -4.6000   -4.7000   -4.8000

  Columns 100 through 101

   -4.9000   -5.0000

aMat = ones(4) * 5

aMat =

     5     5     5     5
     5     5     5     5
     5     5     5     5
     5     5     5     5

Ramos_hw1

aMat =

     5     5     5     5
     5     5     5     5
     5     5     5     5
     5     5     5     5

Ramos_hw1
bMat = diag([1 3 5 3 1])

bMat =

     1     0     0     0     0
     0     3     0     0     0
     0     0     5     0     0
     0     0     0     3     0
     0     0     0     0     1

cMat = reshape(1:49, [7,7])

cMat =

     1     8    15    22    29    36    43
     2     9    16    23    30    37    44
     3    10    17    24    31    38    45
     4    11    18    25    32    39    46
     5    12    19    26    33    40    47
     6    13    20    27    34    41    48
     7    14    21    28    35    42    49

eMat = [cMat[5], cMat[6])
 eMat = [cMat[5], cMat[6])
             
{Error: Invalid expression. When calling a function or indexing a variable, use parentheses.
Otherwise, check for mismatched delimiters.
} 
eMat = [cMat[5] cMat[6])
 eMat = [cMat[5] cMat[6])
             
{Error: Invalid expression. When calling a function or indexing a variable, use parentheses.
Otherwise, check for mismatched delimiters.
} 
eMat = [cMat(5) cMat(6))
 eMat = [cMat(5) cMat(6))
                        
{Error: Invalid expression. When calling a function or indexing a variable, use parentheses.
Otherwise, check for mismatched delimiters.
} 
eMat = [cMat(5) cMat(6)]

eMat =

     5     6

eMat = cMat(:, [5, 6])

eMat =

    29    36
    30    37
    31    38
    32    39
    33    40
    34    41
    35    42

cMat

cMat =

     1     8    15    22    29    36    43
     2     9    16    23    30    37    44
     3    10    17    24    31    38    45
     4    11    18    25    32    39    46
     5    12    19    26    33    40    47
     6    13    20    27    34    41    48
     7    14    21    28    35    42    49

eMat

eMat =

    29    36
    30    37
    31    38
    32    39
    33    40
    34    41
    35    42

fMat = randi([21, 26], 6, 1)

fMat =

    25
    26
    21
    26
    24
    21

cSum = sum(cMat, 1)

cSum =

    28    77   126   175   224   273   322

cMean = mean(cMat, 2)

cMean =

    22
    23
    24
    25
    26
    27
    28

cSub = cMat([3 4 5], [3 4 5])

cSub =

    17    24    31
    18    25    32
    19    26    33

cMat

cMat =

     1     8    15    22    29    36    43
     2     9    16    23    30    37    44
     3    10    17    24    31    38    45
     4    11    18    25    32    39    46
     5    12    19    26    33    40    47
     6    13    20    27    34    41    48
     7    14    21    28    35    42    49


bMat =

     1     0     0     0     0
     0     3     0     0     0
     0     0     5     0     0
     0     0     0     3     0
     0     0     0     0     1


cMat =

     1     8    15    22    29    36    43
     2     9    16    23    30    37    44
     3    10    17    24    31    38    45
     4    11    18    25    32    39    46
     5    12    19    26    33    40    47
     6    13    20    27    34    41    48
     7    14    21    28    35    42    49


eMat =

    29    36
    30    37
    31    38
    32    39
    33    40
    34    41
    35    42


fMat =

    22
    24
    26
    26
    21
    26


cSum =

    28    77   126   175   224   273   322


cMean =

    22
    23
    24
    25
    26
    27
    28

cSub

cSub =

    17    24    31
    18    25    32
    19    26    33

c
{Undefined function or variable 'c'.
} 
cMAT
{Undefined function or variable 'cMAT'.
} 
cMat

cMat =

     1     8    15    22    29    36    43
     2     9    16    23    30    37    44
     3    10    17    24    31    38    45
     4    11    18    25    32    39    46
     5    12    19    26    33    40    47
     6    13    20    27    34    41    48
     7    14    21    28    35    42    49

cSqrt = sqrt(cMat)

cSqrt =

    1.0000    2.8284    3.8730    4.6904    5.3852    6.0000    6.5574
    1.4142    3.0000    4.0000    4.7958    5.4772    6.0828    6.6332
    1.7321    3.1623    4.1231    4.8990    5.5678    6.1644    6.7082
    2.0000    3.3166    4.2426    5.0000    5.6569    6.2450    6.7823
    2.2361    3.4641    4.3589    5.0990    5.7446    6.3246    6.8557
    2.4495    3.6056    4.4721    5.1962    5.8310    6.4031    6.9282
    2.6458    3.7417    4.5826    5.2915    5.9161    6.4807    7.0000

help repmat
 <strong>repmat</strong> Replicate and tile an array.
    B = <strong>repmat</strong>(A,M,N) or B = <strong>repmat</strong>(A,[M,N]) creates a large matrix B 
    consisting of an M-by-N tiling of copies of A. If A is a matrix, 
    the size of B is [size(A,1)*M, size(A,2)*N].
 
    B = <strong>repmat</strong>(A,N) creates an N-by-N tiling.  
    
    B = <strong>repmat</strong>(A,P1,P2,...,Pn) or B = <strong>repmat</strong>(A,[P1,P2,...,Pn]) tiles the array 
    A to produce an n-dimensional array B composed of copies of A. The size 
    of B is [size(A,1)*P1, size(A,2)*P2, ..., size(A,n)*Pn].
    If A is m-dimensional with m > n, an m-dimensional array B is returned.
    In this case, the size of B is [size(A,1)*P1, size(A,2)*P2, ..., 
    size(A,n)*Pn, size(A, n+1), ..., size(A, m)].
 
    <strong>repmat</strong>(A,M,N) when A is a scalar is commonly used to produce an M-by-N
    matrix filled with A's value and having A's CLASS. For certain values,
    you may achieve the same results using other functions. Namely,
       <strong>repmat</strong>(NAN,M,N)           is the same as   NAN(M,N)
       <strong>repmat</strong>(SINGLE(INF),M,N)   is the same as   INF(M,N,'single')
       <strong>repmat</strong>(INT8(0),M,N)       is the same as   ZEROS(M,N,'int8')
       <strong>repmat</strong>(UINT32(1),M,N)     is the same as   ONES(M,N,'uint32')
       <strong>repmat</strong>(EPS,M,N)           is the same as   EPS(ONES(M,N))
 
    Example:
        repmat(magic(2), 2, 3)
        repmat(uint8(5), 2, 3)
 
    Class support for input A:
       float: double, single
       integer: uint8, int8, uint16, int16, uint32, int32, uint64, int64
       char, logical
 
    See also <a href="matlab:help bsxfun">bsxfun</a>, <a href="matlab:help meshgrid">meshgrid</a>, <a href="matlab:help ones">ones</a>, <a href="matlab:help zeros">zeros</a>, <a href="matlab:help nan">nan</a>, <a href="matlab:help inf">inf</a>.

    <a href="matlab:doc repmat">Reference page for repmat</a>
    <a href="matlab:matlab.internal.language.introspective.overloads.displayOverloads('repmat')">Other functions named repmat</a>

rMat = repmat([1 2 3; 4 5 6; 7 8 9], 6, 9)

rMat =

  Columns 1 through 15

     1     2     3     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9     7     8     9

  Columns 16 through 27

     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9

aMat

aMat =

     5     5     5     5
     5     5     5     5
     5     5     5     5
     5     5     5     5

aVec

aVec =

  Columns 1 through 9

    5.0000    4.9000    4.8000    4.7000    4.6000    4.5000    4.4000    4.3000    4.2000

  Columns 10 through 18

    4.1000    4.0000    3.9000    3.8000    3.7000    3.6000    3.5000    3.4000    3.3000

  Columns 19 through 27

    3.2000    3.1000    3.0000    2.9000    2.8000    2.7000    2.6000    2.5000    2.4000

  Columns 28 through 36

    2.3000    2.2000    2.1000    2.0000    1.9000    1.8000    1.7000    1.6000    1.5000

  Columns 37 through 45

    1.4000    1.3000    1.2000    1.1000    1.0000    0.9000    0.8000    0.7000    0.6000

  Columns 46 through 54

    0.5000    0.4000    0.3000    0.2000    0.1000         0   -0.1000   -0.2000   -0.3000

  Columns 55 through 63

   -0.4000   -0.5000   -0.6000   -0.7000   -0.8000   -0.9000   -1.0000   -1.1000   -1.2000

  Columns 64 through 72

   -1.3000   -1.4000   -1.5000   -1.6000   -1.7000   -1.8000   -1.9000   -2.0000   -2.1000

  Columns 73 through 81

   -2.2000   -2.3000   -2.4000   -2.5000   -2.6000   -2.7000   -2.8000   -2.9000   -3.0000

  Columns 82 through 90

   -3.1000   -3.2000   -3.3000   -3.4000   -3.5000   -3.6000   -3.7000   -3.8000   -3.9000

  Columns 91 through 99

   -4.0000   -4.1000   -4.2000   -4.3000   -4.4000   -4.5000   -4.6000   -4.7000   -4.8000

  Columns 100 through 101

   -4.9000   -5.0000

bMat

bMat =

     1     0     0     0     0
     0     3     0     0     0
     0     0     5     0     0
     0     0     0     3     0
     0     0     0     0     1

cMat

cMat =

     1     8    15    22    29    36    43
     2     9    16    23    30    37    44
     3    10    17    24    31    38    45
     4    11    18    25    32    39    46
     5    12    19    26    33    40    47
     6    13    20    27    34    41    48
     7    14    21    28    35    42    49

cMean

cMean =

    22
    23
    24
    25
    26
    27
    28

cSqrt

cSqrt =

    1.0000    2.8284    3.8730    4.6904    5.3852    6.0000    6.5574
    1.4142    3.0000    4.0000    4.7958    5.4772    6.0828    6.6332
    1.7321    3.1623    4.1231    4.8990    5.5678    6.1644    6.7082
    2.0000    3.3166    4.2426    5.0000    5.6569    6.2450    6.7823
    2.2361    3.4641    4.3589    5.0990    5.7446    6.3246    6.8557
    2.4495    3.6056    4.4721    5.1962    5.8310    6.4031    6.9282
    2.6458    3.7417    4.5826    5.2915    5.9161    6.4807    7.0000

qSub
{Undefined function or variable 'qSub'.
} 
cSub

cSub =

    17    24    31
    18    25    32
    19    26    33

cSum

cSum =

    28    77   126   175   224   273   322

eMat

eMat =

    29    36
    30    37
    31    38
    32    39
    33    40
    34    41
    35    42

fMat

fMat =

    22
    24
    26
    26
    21
    26

rMat

rMat =

  Columns 1 through 15

     1     2     3     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9     7     8     9

  Columns 16 through 27

     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9
     1     2     3     1     2     3     1     2     3     1     2     3
     4     5     6     4     5     6     4     5     6     4     5     6
     7     8     9     7     8     9     7     8     9     7     8     9

whos
  Name        Size             Bytes  Class     Attributes

  aMat        4x4                128  double              
  aVec        1x101              808  double              
  bMat        5x5                200  double              
  cMat        7x7                392  double              
  cMean       7x1                 56  double              
  cSqrt       7x7                392  double              
  cSub        3x3                 72  double              
  cSum        1x7                 56  double              
  eMat        7x2                112  double              
  fMat        6x1                 48  double              
  rMat       18x27              3888  double              

diary off
